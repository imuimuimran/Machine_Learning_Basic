import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Sample movie dataset
data = {'Movie': ['Inception', 'Interstellar', 'Titanic', 'Avatar'],
        'Description': ['Sci-Fi thriller dream within a dream',
                        'Sci-Fi space travel time dilation',
                        'Romantic drama sinking ship',
                        'Sci-Fi alien world adventure']}
df = pd.DataFrame(data)

# Convert text to feature vectors
vectorizer = TfidfVectorizer()
tfidf_matrix = vectorizer.fit_transform(df['Description'])

# Compute similarity between movies
similarity_matrix = cosine_similarity(tfidf_matrix, tfidf_matrix)

# Function to recommend movies based on similarity
def recommend_movie(movie_name):
    idx = df[df['Movie'] == movie_name].index[0]
    similar_movies = sorted(list(enumerate(similarity_matrix[idx])), key=lambda x: x[1], reverse=True)[1:3]
    recommendations = [df.iloc[i[0]]['Movie'] for i in similar_movies]
    return recommendations

# Example recommendation
print("Recommended movies for 'Inception':", recommend_movie('Inception'))
